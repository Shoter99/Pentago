{"ast":null,"code":"var _jsxFileName = \"/home/dawid/Documents/Pentago/src/components/InBoard.js\";\nimport React from 'react';\nimport Place from './Place';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InBoard = _ref => {\n  let {\n    board,\n    turn,\n    row,\n    changeColor,\n    choice\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `inBoard ${choice}`,\n    id: `boardnr_` + row,\n    children: board.map((place, index) => {\n      return /*#__PURE__*/_jsxDEV(Place, {\n        changeColor: changeColor,\n        color: place,\n        row: row,\n        col: index,\n        turn: turn\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = InBoard;\nexport default InBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"InBoard\");","map":{"version":3,"sources":["/home/dawid/Documents/Pentago/src/components/InBoard.js"],"names":["React","Place","InBoard","board","turn","row","changeColor","choice","map","place","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AACA,MAAMC,OAAO,GAAG,QAA6C;AAAA,MAA5C;AAACC,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,GAAd;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA;AAAhC,GAA4C;AAEzD,sBACI;AAAK,IAAA,SAAS,EAAG,WAAUA,MAAO,EAAlC;AAAqC,IAAA,EAAE,EAAG,UAAD,GAAWF,GAApD;AAAA,cAEKF,KAAK,CAACK,GAAN,CAAU,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACjC,0BACI,QAAC,KAAD;AAAmB,QAAA,WAAW,EAAEJ,WAAhC;AAA6C,QAAA,KAAK,EAAEG,KAApD;AAA2D,QAAA,GAAG,EAAEJ,GAAhE;AAAqE,QAAA,GAAG,EAAEK,KAA1E;AAAiF,QAAA,IAAI,EAAEN;AAAvF,SAAYM,KAAZ;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJQ;AAFL;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAdD;;KAAMR,O;AAgBN,eAAeA,OAAf","sourcesContent":["import React from 'react'\nimport Place from './Place'\nconst InBoard = ({board, turn, row, changeColor, choice}) => {\n    \n    return (\n        <div className={`inBoard ${choice}`} id={`boardnr_`+row}>\n            {/* {console.log('Row: '+row)} */}\n            {board.map((place, index) => {\n        return (\n            <Place key={index} changeColor={changeColor} color={place} row={row} col={index} turn={turn} />\n        )\n    })}\n        \n        \n        </div>\n    )\n}\n\nexport default InBoard\n"]},"metadata":{},"sourceType":"module"}